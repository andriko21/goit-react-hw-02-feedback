{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js","components/statistics/Statistics.module.css","components/Section/Section.module.css"],"names":["module","exports","Statistics","title","good","neutral","bad","total","positivePercent","className","style","List","Item","Section","children","styles","defaultProps","FeedbackOptions","options","props","leaveFeedback","this","map","option","button","type","onClick","Component","App","state","onBtnClick","value","setState","currentState","countTotalFeedback","countPositiveFeedbackPercentage","totalCalc","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,kC,mKC4BZC,EAxBI,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBACtD,OACE,qCACE,6BAAKL,IACL,qBAAIM,UAAWC,IAAMC,KAArB,UACE,qBAAIF,UAAWC,IAAME,KAArB,mBAAkCR,KAClC,qBAAIK,UAAWC,IAAME,KAArB,sBAAqCP,KACrC,qBAAII,UAAWC,IAAME,KAArB,kBAAiCN,KACjC,qBAAIG,UAAWC,IAAME,KAArB,oBAAmCL,KACnC,qBAAIE,UAAWC,IAAME,KAArB,gCAA+CJ,EAA/C,c,gBCXFK,EAAU,SAAC,GAAD,EAAGV,MAAH,IAAUW,EAAV,EAAUA,SAAV,OACd,0BAASL,UAAWM,IAAOF,QAA3B,UACE,oBAAIJ,UAAWM,IAAOZ,MAAtB,mCACCW,MAQLD,EAAQG,aAAe,CACnBF,SAAU,KAGCD,Q,iBCdFI,EAAb,4MACGC,QAAU,EAAKC,MAAMD,QADxB,EAEIE,cAAgB,EAAKD,MAAMC,cAF/B,4CAGK,WAAU,IAAD,OACV,OACE,mCACOC,KAAKH,QAAQI,KAAI,SAAAC,GACpB,OACE,wBACEd,UAAWC,IAAMc,OAEjBC,KAAK,SACLC,QAAS,kBAAM,EAAKN,cAAcG,IAJpC,SAMGA,GAJIA,YAVnB,GAAqCI,aCChBC,E,4MACnBC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAQE,EAAaF,GAAS,O,EAKrCG,mBAAqB,SAAC9B,EAAMC,EAASC,GACnC,OAAOF,EAAOC,EAAUC,G,EAG1B6B,gCAAkC,SAAC/B,EAAMC,EAASC,GAChD,IAAM8B,EAAYhC,EAAOC,EAAUC,EACnC,OAAsB,IAAd8B,EAAkB,EAAKhC,EAAOgC,EAAa,KAAKC,W,4CAG1D,WACE,MAA+BhB,KAAKQ,MAA5BzB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAAC,EAAD,CAASH,MAAM,wBAAf,UACE,cAAC,EAAD,CACEe,QAAS,CAAC,OAAQ,UAAW,OAC7BE,cAAeC,KAAKS,aAEyB,IAA9CT,KAAKa,mBAAmB9B,EAAKC,EAAQC,GAAa,kDACnD,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKa,mBAAmB9B,EAAMC,EAASC,GAC9CE,gBAAiBa,KAAKc,gCACpB/B,EACAC,EACAC,Y,GAzCqBqB,aCAjCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B1C,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.4cec6eb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__18V8m\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"../statistics/Statistics.module.css\";\r\n\r\n\r\nconst Statistics = ({ title, good, neutral, bad, total, positivePercent }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <ul className={style.List}>\r\n        <li className={style.Item}>Good: {good}</li>\r\n        <li className={style.Item}>Neutral: {neutral}</li>\r\n        <li className={style.Item}>Bad: {bad}</li>\r\n        <li className={style.Item}>Total: {total}</li>\r\n        <li className={style.Item}>Positive feedback: {positivePercent}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercent: PropTypes.string,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport styles from '../Section/Section.module.css'\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    <h1 className={styles.title}>Please leave feedback</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nSection.defaultProps = {\r\n    children: ' ',\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport style from '../FeedbackOptions/FeedbackOptions.module.css'\r\n\r\nexport class FeedbackOptions extends Component {\r\n   options = this.props.options;\r\n    leaveFeedback = this.props.leaveFeedback;\r\n     render() {\r\n    return (\r\n      <>\r\n            {this.options.map(option => {\r\n          return (\r\n            <button\r\n              className={style.button}\r\n              key={option}\r\n              type=\"button\"\r\n              onClick={() => this.leaveFeedback(option)}\r\n            >\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Statistics from \"./components/statistics/Statistics.js\";\r\nimport Section from \"./components/Section/Section.js\";\r\nimport { FeedbackOptions } from \"./components/FeedbackOptions/FeedbackOptions.js\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onBtnClick = (value) => {\r\n    this.setState((currentState) => {\r\n      return {\r\n        [value]: currentState[value] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = (good, neutral, bad) => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (good, neutral, bad) => {\r\n    const totalCalc = good + neutral + bad;\r\n    return (totalCalc === 0 ? 0 : (good / totalCalc) * 100).toFixed();\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={[\"good\", \"neutral\", \"bad\"]}\r\n          leaveFeedback={this.onBtnClick}\r\n        />\r\n        {this.countTotalFeedback(good,neutral,bad) === 0 ? <p>No feedback given</p> :\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={this.countTotalFeedback(good, neutral, bad)}\r\n          positivePercent={this.countPositiveFeedbackPercentage(\r\n            good,\r\n            neutral,\r\n            bad\r\n          )}\r\n        />}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\n// const App = () => (\r\n//\r\n// )\r\n\r\n// export default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Statistics_List__1Wzcb\",\"Item\":\"Statistics_Item__190HU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__2ROiw\",\"title\":\"Section_title__s91Xy\"};"],"sourceRoot":""}